1. Visit this link: https://github.com/boxingit/nau-selenium

2. Open Windows cmd line or Mac terminal in a folder that you want to keep this project
3. run this cmd: git clone https://github.com/boxingit/nau-selenium.git

4. To  get latest version of the project run below cmd: git pull

5. Do not work on master branch. On your IntelliJ terminal run these commands.
	1. create a new branch: git branch yourName
	2. move to that branch: git checkout yourName

6. In order to get the latest version from my master branch you will have to run below commands:
    1. git checkout master
    2. git pull

7. When you work on your branch you will need to save your code. And this is how you do it.
	1. git status (this command will tell you in which file you made those changes)
	2. git add file/path (Ex: git add src/test/java/foundation/FirstTest.java)
	3. git commit -m"Add page title test case"

8.  How to move (checkout) to branch "selenium-review-6-21-2020"
    1. first save your codes in your branch (do git commit)
    2. git fetch
    3. git checkout selenium-review-6-21-2020

9. Some info about web elements:
   =============================

   <a
   	href="/abtest">A/B Testing<
   /a>

   a = tag

   href = attribute

   "/abtest" = attribute value

   A/B Testing = text

   xpath locator for the above element
   //a[text()='A/B Testing']
   //a[.='A/B Testing']

   How to get my code:
   ===================

   Scenario 1:
   If you are on your own branch you will need to save your code before switching to my branch (selenium-review-6-28-2020). For that follow below steps.

   1. git add .
   2. git commit -m"message"
   3. git fetch
   4. git checkout selenium-review-6-28-2020
   5. git pull

   Scenario 2: (DONOT DO GIT ADD/GIT COMMIT on my branch,
   Do not write code on my brancg please...)

   If you decide to write code on my branch (selenium-review-6-28-2020) then you will need to delete whatever you wrote in order to get my code. Follow below steps:

   1. git status (this will tell in what files you made changes. Lets assume you made changes in file1 and file2)
   2. git restore file1 file2 (this will delete what ever you wrote in file1 and file2)
   3. git pull


10. Access modifiers:

    public - is accessible from everywhere
    protected - is accesible for the classess that are in the same package and for classes that extend the class
    default - is accessible for the classess that are in the same package
    private - is accessible only inside te class (you cannot access anywhere outside the class)